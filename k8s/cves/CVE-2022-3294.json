{
	"id": "CVE-2022-3294",
	"created_at": "2022-11-08T21:33:26Z",
	"summary": "Node address isn't always verified when proxying",
	"component": "k8s.io/kube-apiserver",
	"description": "CVSS Rating: CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:HA security issue was discovered in Kubernetes where users may have access to secure endpoints in the control plane network. Kubernetes clusters are only affected if an untrusted user can modify Node objects and send proxy requests to them.Kubernetes supports node proxying, which allows clients of kube-apiserver to access endpoints of a Kubelet to establish connections to Pods, retrieve container logs, and more. While Kubernetes already validates the proxying address for Nodes, a bug in kube-apiserver made it possible to bypass this validation. Bypassing this validation could allow authenticated requests destined for Nodes to to the API server's private network.Am I vulnerable?Clusters are affected by this vulnerability if there are endpoints that the kube-apiserver has connectivity to that users should not be able to access. This includes:mTLS services that accept the same client certificate as nodes may be affected. The severity of this issue depends on the privileges \u0026 sensitivity of the exploitable endpoints.Clusters that configure the egress selector to use a proxy for cluster traffic may not be affected.",
	"affected_version": [
		{
			"from": "0.0.0",
			"to": "1.25.3"
		},
		{
			"from": "0.0.0",
			"to": "1.24.7"
		},
		{
			"from": "0.0.0",
			"to": "1.23.13"
		},
		{
			"from": "0.0.0",
			"to": "1.22.15"
		}
	],
	"fixed_version": [
		{
			"fixed": "1.25.4"
		},
		{
			"fixed": "1.24.8"
		},
		{
			"fixed": "1.23.14"
		},
		{
			"fixed": "1.22.16"
		}
	],
	"urls": [
		"https://github.com/kubernetes/kubernetes/issues/113757",
		"https://www.cve.org/cverecord?id=CVE-2022-3294"
	],
	"cvss": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
	"severity": "Medium",
	"score": 6.6
}