{
	"id": "CVE-2018-1002102",
	"created_at": "2019-12-03T22:58:37Z",
	"summary": "Unvalidated redirect",
	"component": "k8s.io/kubelet",
	"description": "CVSS Rating: CVSS:3.0/AV:N/AC:H/PR:H/UI:R/S:C/C:L/I:N/A:N/E:F (Low)An attacker-controlled Kubelet can return an arbitrary redirect when responding to certain apiserver requests. Impacted kube-apiservers will follow the redirect as a GET request with client-cert credentials for authenticating to the Kubelet.Am I vulnerable?Kubernetes API servers with the StreamingProxyRedirects feature enabled AND without the ValidateProxyRedirects feature are affected.API servers using SSH tunnels (--ssh-user / --ssh-keyfile) are not affected.Using the default feature gate values, kube-apiserver versions before v1.14 are affected.How do I mitigate this vulnerability?For Kubernetes versions \u003e= v1.10.0, the ValidateProxyRedirects can be manually enabled with the kube-apiserver flag --feature-gates=ValidateProxyRedirects=true.Fix impactThe ValidateProxyRedirects feature will cause the kube-apiserver to check that redirects go to the same host. If nodes are configured to respond to CRI streaming requests on a different host interface than what the apiserver makes requests on (only the case if not using the built-in dockershim \u0026 setting the kubelet flag --redirect-container-streaming=true), then these requests will be broken. In that case, the feature can be temporarily disabled until the node configuration is corrected. We suggest setting --redirect-container-streaming=false on the kubelet to avoid issues.",
	"urls": [
		"https://github.com/kubernetes/kubernetes/issues/85867",
		"https://www.cve.org/cverecord?id=CVE-2018-1002102"
	],
	"cvss": "CVSS:3.0/AV:N/AC:H/PR:H/UI:R/S:C/C:L/I:N/A:N",
	"severity": "Low",
	"score": 2.6
}