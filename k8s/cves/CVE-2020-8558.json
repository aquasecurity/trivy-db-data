{
	"id": "CVE-2020-8558",
	"created_at": "2020-06-19T18:38:58Z",
	"summary": "Node setting allows for neighboring hosts to bypass localhost boundary",
	"component": "k8s.io/kubelet/kube-proxy",
	"description": "CVSS Rating:In typical clusters: medium (5.4) CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:NIn clusters where API server insecure port has not been disabled: high (8.8) CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:HA security issue was discovered in kube-proxy which allows adjacent hosts to reach TCP and UDP services bound to 127.0.0.1 running on the node or in the node's network namespace. For example, if a cluster administrator runs a TCP service on a node that listens on 127.0.0.1:1234, because of this bug, that service would be potentially reachable by other hosts on the same LAN as the node, or by containers running on the same node as the service. If the example service on port 1234 required no additional authentication (because it assumed that only other localhost processes could reach it), then it could be vulnerable to attacks that make use of this bug.The Kubernetes API Server's default insecure port setting causes the API server to listen on 127.0.0.1:8080 where it will accept requests without authentication. Many Kubernetes installers explicitly disable the API Server's insecure port, but in clusters where it is not disabled, an attacker with access to another system on the same LAN or with control of a container running on the master may be able to reach the API server and execute arbitrary API requests on the cluster.Â This port is deprecated, and will be removed in Kubernetes v1.20.Am I vulnerable?You may be vulnerable if:",
	"affected_version": [
		{
			"from": "1.18.0",
			"to": "1.18.3"
		},
		{
			"from": "1.17.0",
			"to": "1.17.6"
		},
		{
			"from": "0.0.0",
			"to": "1.16.10"
		}
	],
	"fixed_version": [
		{
			"fixed": "1.18.4"
		},
		{
			"fixed": "1.17.7"
		},
		{
			"fixed": "1.16.11"
		}
	],
	"urls": [
		"https://github.com/kubernetes/kubernetes/issues/92315",
		"https://www.cve.org/cverecord?id=CVE-2020-8558"
	],
	"cvss": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
	"severity": "Medium",
	"score": 5.4
}